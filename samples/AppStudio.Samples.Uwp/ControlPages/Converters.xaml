<base:BaseControlPage
    x:Class="AppStudio.Samples.Uwp.ControlPages.Converters"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppStudio.Samples.Uwp.ControlPages"
    xmlns:base="using:AppStudio.Samples.Uwp.ControlPages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    xmlns:converter="using:AppStudio.Uwp.Converters"
    mc:Ignorable="d" Margin="12,0"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <base:BaseControlPage.Resources>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converter:StringVisibilityConverter x:Key="StringVisibilityConverter"/>
        <converter:StringToSizeConverter x:Key="StringToSizeConverter"/>
        <converter:BoolToSizeConverter x:Key="BoolToSizeConverter"/>
        <converter:CollectionVisibilityConverter x:Key="CollectionVisibilityConverter"/>
    </base:BaseControlPage.Resources>
    <Grid>
        <ScrollViewer>
            <StackPanel>
                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Margin="0,12,0,0">
                <Run>
                    Converters are classes that implements IValueConverter and allows convert values to specify XAML properties on DataBinding.
                </Run>
                <LineBreak/>
                <Run>
                    Convert method is used on OneWay and OneTime DataBinding mode and also ConvertBack on TwoWay mode.
                </Run>
                </TextBlock>
                <TextBlock Text="BoolToVisibilityConverter" Style="{ThemeResource BodyTextBlockStyle}" FontWeight="Bold" Margin="0,12,0,0"/>
                <ToggleSwitch IsOn="{Binding BoolValue, Mode=TwoWay}" Margin="0,12,0,0" Width="100" Height="50"/>
                <TextBlock Text="{Binding BoolValue, Mode=OneWay}" Margin="0,12,0,0"/>
                <TextBlock Text="This content text is visible if toggle button value is true." Visibility="{Binding BoolValue, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Margin="0,12,0,0"/>
                <TextBlock Text="StringVisibilityConverter" Style="{ThemeResource BodyTextBlockStyle}" FontWeight="Bold" Margin="0,24,0,0"/>
                <TextBox Text="{Binding StringValue, Mode=TwoWay}" Margin="0,12,0,0"/>
                <TextBlock Text="This content text is visible TextBox is not empty." Visibility="{Binding StringValue, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}" Margin="0,12,0,0"/>
                <TextBlock Text="StringToSizeConverter" Style="{ThemeResource BodyTextBlockStyle}" FontWeight="Bold" Margin="0,24,0,0"/>
                <TextBlock Text="Image container grid has MaxWidth and MaxHeight 0 if Image path is empty and Auto if not." Margin="0,12,0,0"/>
                <TextBox Text="{Binding StringToSizeImagePath, Mode=TwoWay}" Margin="0,12,0,0"/>
                <Grid MaxWidth="{Binding StringToSizeImagePath, Converter={StaticResource StringToSizeConverter}}"
                      MaxHeight="{Binding StringToSizeImagePath, Converter={StaticResource StringToSizeConverter}}"
                      Width="300" Height="300" HorizontalAlignment="Left"
                      Background="LightCyan" Margin="0,12,0,0">
                    <Image Source="{Binding StringToSizeImagePath}"/>
                </Grid>
                <TextBlock Text="BoolToSizeConverter" Style="{ThemeResource BodyTextBlockStyle}" FontWeight="Bold" Margin="0,24,0,0"/>
                <TextBlock Text="Image container grid has Height 0 if toggle false and Auto if true." Margin="0,12,0,0"/>
                <ToggleSwitch IsOn="{Binding SecondBoolValue, Mode=TwoWay}" Margin="0,12,0,0" Width="100" Height="50"/>
                <Grid Width="300"
                      Height="{Binding SecondBoolValue, Converter={StaticResource BoolToSizeConverter}, Mode=OneWay}"
                      HorizontalAlignment="Left"
                      Background="LightCyan" Margin="0,12,0,0">
                    <Image Source="{Binding StringToSizeImagePath}"/>
                </Grid>
                <TextBlock Text="CollectionVisibilityConverter" Style="{ThemeResource BodyTextBlockStyle}" FontWeight="Bold" Margin="0,24,0,0"/>
                <TextBlock Text="Add Items button will be visible if collection are empty, and clear items button will be visible if there are items in collection." Margin="0,12,0,0"/>
                <TextBlock Text="Collection" Margin="0,12,0,0"/>
                <ItemsControl ItemsSource="{Binding Collection}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" Margin="6"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                    <Button Content="Add 5 Items to list." Command="{Binding AddItemsToCollection}" Visibility="{Binding Collection, Converter={StaticResource CollectionVisibilityConverter}, ConverterParameter=reverse}"/>
                    <Button Content="Clear list." Command="{Binding ClearCollection}" Visibility="{Binding Collection, Converter={StaticResource CollectionVisibilityConverter}}"/>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</base:BaseControlPage>
